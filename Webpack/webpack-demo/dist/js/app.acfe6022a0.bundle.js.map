{"version":3,"file":"js/app.acfe6022a0.bundle.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/xml/data.xml","webpack://webpackNumbers/./src/style/style.css","webpack://webpackNumbers/./src/index.js","webpack://webpackNumbers/./src/js/add1s.js","webpack://webpackNumbers/./src/img/HA.png","webpack://webpackNumbers/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://webpackNumbers/webpack/runtime/startup prefetch"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"webpackNumbers\"] = factory(root[\"_\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__8092__) {\nreturn ","export default __webpack_public_path__ + \"media/3d687a0dab54297050f5fec68d06ffab.xml\";","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1642325658468\n      var cssReload = require(\"C:/Users/MING/web/Webpack/webpack-demo/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import './style/style.css';\r\nimport Icon from './img/HA.png';\r\nimport Data from './xml/data.xml';\r\nimport numRef from './ref.json';\r\n// import '@babel/polyfill';\r\n// import { file, parse } from './js/globals.js';\r\n// import _ from 'lodash';   //使用 ProvidePlugin 后webpack自带导入，无需手动import\r\n/* babel-polyfill:\r\n  npm i --save babel-polyfill\r\n  最佳实践仍然是，不加选择地和同步地加载所有 polyfill/shim，\r\n  尽管这会导致额外的 bundle 体积成本。\r\n  否则，可把 import 放入一个新文件，\r\n  并加入 whatwg-fetch polyfill \r\n*/\r\n// import 'babel-polyfill';   \r\nimport add1s from './js/add1s';\r\n// 入口文件1\r\n\r\n// 将数字 1 到 5 转换为文本表示，反之亦然，例如将 2 转换为 '二'。\r\nexport function numToWord(num) {\r\n  return _.reduce(numRef, (accum, ref) => {\r\n    return ref.num === num ? ref.word : accum;\r\n  }, '');\r\n}\r\n\r\nexport function wordToNum(word) {\r\n  return _.reduce(numRef, (accum, ref) => {\r\n    return ref.word === word && word.toLowerCase() ? ref.num : accum;\r\n  }, -1);\r\n}\r\n\r\nfunction getComponent() {\r\n  return (\r\n    /* \r\n      代码分割方式3：\r\n      使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入\r\n      在注释中我们提供了 webpackChunkName。\r\n      这样会将拆分出来的 bundle 命名为 lodash.bundle.js，\r\n      而不是 [id].bundle.js \r\n    */ /*\r\n      npm install eslint --save-dev\r\n    */\r\n    // /* eslint-disable */\r\n    // eslint-disable-next-line\r\n    import(/* webpackChunkName: \"lodash\" */ 'lodash')\r\n      .then(({ default: _ }) => {\r\n        var element = document.createElement('div');\r\n\r\n        var button = document.createElement('button');\r\n        var br = document.createElement('br');\r\n        button.innerHTML = 'Click me and look at the console!';\r\n        /* \r\n          使用 ProvidePlugin 暴露出某个模块中单个导出，\r\n          通过配置一个“数组路径”\r\n          （例如 [module, child, ...children?]）\r\n          实现此功能。所以，我们假想如下，\r\n          无论 join 方法在何处调用，\r\n          我们都只会获取到 lodash 中提供的 join 方法 \r\n        */\r\n        // element.innerHTML = _.join(['Hello', 'webpack'], ' ');\r\n        element.innerHTML = join(['Hello', 'webpack'], ' ');\r\n\r\n        // 假设我们处于 `window` 上下文\r\n        /* \r\n          当模块运行在 CommonJS 上下文中，\r\n          这将会变成一个问题，\r\n          也就是说此时的 this 指向的是 module.exports。\r\n          在这种情况下，你可以通过使用 imports-loader \r\n          覆盖 this 指向 \r\n        */\r\n        this.alert('Hmmm, this probably isn\\'t a great idea...')\r\n\r\n        element.appendChild(br);\r\n        element.appendChild(button);\r\n        // element.onclick = Print.bind(null, 'Hello webpack!');\r\n\r\n        /* \r\n          Note that \r\n          because a network request is involved, \r\n          some indication of loading would need to \r\n          be shown in a production-level site/app. \r\n        */\r\n        button.onclick = e => (\r\n          // 懒加载：等到第一次交互的时候再加载那个代码块\r\n          import(/* webpackChunkName: \"print\" */ './js/add1s')\r\n            .then(module => {\r\n              /* \r\n                注意当调用 ES6 模块\r\n                的 import() 方法（引入模块）时，\r\n                必须指向模块的 .default 值，\r\n                因为它才是 promise 被处理后\r\n                返回的实际的 module 对象。 \r\n              */\r\n              let print = module.default;\r\n              print()\r\n            })\r\n        )\r\n\r\n        handleOtherRes();\r\n        return element;\r\n      })\r\n      .catch(error => `An error occurred while loading the component: ${error}`)\r\n    /* eslint-enable */\r\n  );\r\n}\r\n\r\n// let element = document.createElement('div');\r\n\r\nelement.innerHTML = _.join(['Hello', 'webpack'], ' ');\r\n// element.classList.add('hello');\r\nlet handleOtherRes = () => {\r\n  var btn = document.createElement('button');\r\n  btn.innerHTML = '点击这里，然后查看 console！';\r\n  btn.onclick = add1s(1);\r\n  element.appendChild(btn);\r\n\r\n  // 将图像添加到我们已经存在的 div 中。\r\n  var myIcon = new Image();\r\n  myIcon.src = Icon;\r\n  element.appendChild(myIcon);\r\n\r\n  console.log(Data);\r\n\r\n  // return element;\r\n}\r\n\r\n// document.body.appendChild(component());\r\n// let element = getComponent();    \r\n// 存储element，以在add1s.js修改时重新渲染\r\n// document.body.appendChild(element);\r\ngetComponent().then(component => {\r\n  document.body.appendChild(component);\r\n  /* 模块热替换HMR：\r\n    配置热模块替换HMR，在 add1s.js 内部发生变更时，\r\n    告诉 webpack 接受 updated module。 \r\n  */\r\n  /* \r\n    一旦module.hot为true，说明开启了HMR \r\n      --> 让HMR功能代码生效 \r\n  */\r\n  if (module.hot) {\r\n    /* \r\n      方法会监听add1s.js文件的变化，一旦发生变化，\r\n      其他模块不会重新打包构建。\r\n      会执行后面的回调函数 \r\n    */\r\n    module.hot.accept('./js/add1s.js', function () {\r\n      console.log('Accepting the updated printMe module!');\r\n      // add1s();\r\n      document.body.removeChild(element);\r\n      element = getComponent();    //重新渲染“component”，以便更新click事件处理函数\r\n      document.body.appendChild(element);\r\n\r\n      /* \r\n        验证：条件地加载新的 polyfills.bundle.js 文件。\r\n        根据需要支持的技术和浏览器来决定是否加载。\r\n        我们将做一些简单的试验，\r\n        来确定是否需要引入这些 polyfill \r\n      */\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          console.log('We retrieved some data! AND we\\'re confident it will work on a variety of browser distributions.')\r\n          console.log(json)\r\n        })\r\n        .catch(error => console.error('Something went wrong when fetching this data: ', error))\r\n    })\r\n  }\r\n})\r\n\r\n// 注册Service Worker以实现PWA\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register('/service-worker.js')\r\n      .then(registration => {\r\n        console.log('SW registered: ', registration);\r\n      })\r\n      .catch(registrationError => {\r\n        console.log('SW registration failed: ', registrationError);\r\n      });\r\n  });\r\n}\r\n\r\n/* “// eslint-disable-next-line”注释：\r\n  通过“// eslint-disable-next-line”注释\r\n  设置eslint所有规则在下一行都失效（下一行不进行eslint检查）\r\n  （eslint的airbnb规范不允许console.log） \r\n*/\r\n// eslint-disable-next-line\r\nconsole.log(1);\r\n\r\n// 在IE6测试Promise是否成功兼容\r\nconst pormise = new Promise(resolve => {\r\n  setTimeout(() => {\r\n    console.log('测试Promise是否成功兼容。定时器执行完毕，已兼容');\r\n    resolve();\r\n  }, 1000);\r\n});\r\nconsole.log(pormise);\r\n\r\nfunction sum(...args) {\r\n  return args.reduce((p, c) => p + c, 0);\r\n}\r\n/* \r\n  通过JS代码，让某个文件被单独打包成一个chunk\r\n  import动态导入语法：能将某个文件单独打包\r\n*/\r\nimport(/* webpackChunkName: 'calc' */'./js/calc')\r\n  // .then((result) => {\r\n  .then(({ mul, count }) => {\r\n    // 文件加载成功\r\n    console.log(mul(2, 5));\r\n  })\r\n  .catch(() => {\r\n    console.log('文件加载失败');\r\n  });\r\nconsole.log(sum(1, 2, 3, 4));\r\n\r\nconsole.log('index.js文件被加载了');\r\ndocument.getElementById('btn').onclick = () => {\r\n  /*\r\n    * 懒加载：当文件需要使用时才加载\r\n    * 预加载（prefetch）：在使用之前，提前加载JS文件\r\n  */ /*\r\n    * 正常加载可以认为是并行加载\r\n    * 预加载是等其他资源加载完毕，浏览器空闲了，再偷偷加载资源\r\n  */\r\n  import(/* webpackChunkName: 'text', webpackPrefetch: true */'./js/calc').then(({ mul }) => {\r\n    console.log(mul(4, 5));\r\n  })\r\n}\r\n\r\n/* \r\n  1. eslint不认识window、navigator全局变量\r\n    解决：需要修改package.json中eslintConfig配置\r\n      \"env\": {\r\n        \"browser\": true   //支持浏览器端全局变量\r\n      }\r\n  2. SW代码必须运行在服务器上\r\n    nodejs:\r\n      npm i serve -g\r\n      serve -s build    #启动服务器，将build目录下所有资源\r\n      #作为静态资源暴露出去\r\n*/\r\n// 注册serviceworker\r\n// 处理兼容性问题\r\nif ('serviceworker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceworker\r\n      .register('/service-worker.js')\r\n      .then(() => {\r\n        console.log('SW注册成功');\r\n      })\r\n      .catch(() => {\r\n        console.log('SW注册失败');\r\n      });\r\n  });\r\n}","/*\n * @Author: NeptLiang\n * @Date: 2021-06-02 19:44:38\n * @LastEditors: NeptLiang\n * @LastEditTime: 2021-11-21 21:50:06\n * @Description: 入口2\n */\nimport _ from 'lodash';\n\n/* eslint-disable */\nconsole.log('The print.js module has loaded! See the network tab in dev tools...');\n\nexport default function print(text) {\n  console.log(text);\n}\n\nconsole.log(\n  // _.join(['Another', 'module', 'loaded!'], ' '),\n);\n\nexport const add1s = (sum) => {\n  cosole.log('+1s');\n  return `剩余${sum++}秒`;\n};\n\nexport const subtract1s = (sum) => {\n  console.log('-1s');\n  return `剩余${sum--}秒`;\n};\n","module.exports = __webpack_public_path__ + \"imgs/98c41d4a28.png\";","module.exports = __WEBPACK_EXTERNAL_MODULE__8092__;","__webpack_require__.O(0, [143], function() {\n\t__webpack_require__.E(722);\n}, 5);"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__8092__","cssReload","id","hot","dispose","accept","undefined","numToWord","num","_","reduce","numRef","accum","ref","word","wordToNum","toLowerCase","getComponent","then","default","element","document","createElement","button","br","innerHTML","join","alert","appendChild","onclick","e","print","handleOtherRes","catch","error","btn","add1s","myIcon","Image","src","Icon","console","log","Data","component","body","removeChild","fetch","response","json","navigator","window","addEventListener","serviceWorker","register","registration","registrationError","pormise","Promise","resolve","setTimeout","mul","count","args","p","c","sum","getElementById","serviceworker","text","cosole","subtract1s","__webpack_require__","O","E"],"sourceRoot":""}